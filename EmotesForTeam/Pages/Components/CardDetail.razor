@page "/cardDetail/{CardId}"
@using EmotesForTeam.Model
@inherits CardGridBase

@if (cardViewModel != null)
{
    <span class="text-cyan-700 text-xl font-bold" style="font-family: 'Google Sans', sans-serif;">added by: @cardViewModel.Card.Owner</span>

    <div class="flex justify-end px-8 py-4">
        <div class="flex flex-col items-end">
            <div class="relative w-[569px] h-[554px] bg-white rounded-[50px] shadow-xl overflow-hidden flex flex-col justify-between"> <!-- Added overflow-hidden -->
            <img class="w-[362px] h-[362px] rounded-[25px] object-cover mt-8 self-center" src="@cardViewModel.Card.ImageUrl" alt="@cardViewModel.Card.Title"/>
                <div class="absolute bottom-16 w-full py-4 text-center">
                    <span class="text-black text-xl font-bold" style="font-family: 'Google Sans', sans-serif;">@cardViewModel.Card.Title</span>
                </div>
            </div>
            <button onclick="AddCardToUserInventory()" class="w-[569px] h-10 mt-4 bg-blue-600 rounded-[6.7px] font-bold text-white hover:bg-blue-700 active:scale-90 transition duration-150 ease-in-out flex justify-center items-center shadow">Quick Add</button>
        </div>
    </div>


}
else
{
    <p>Loading...</p>
} 

@code {
    [Parameter]
    public string CardId { get; set; }

    private CardViewModel cardViewModel;

    protected override async Task OnInitializedAsync()
    {
        var card = await CardService.GetCardById(CardId); // This returns a Card object
        if(card != null)
        {
            // Convert or map Card to CardViewModel
            cardViewModel = new CardViewModel
            {
                Card = card, // Assign the card to the ViewModel
            };
        }
    }
    
    private async Task AddCardToUserInventory()
    {
        // // Assuming you have a service method that adds the card to the user's inventory
        // // You will need to pass the user's ID and the card's ID
        // var userId = "userId"; // Get this from the user's context/session
        // await UserService.AddCardToUserInventory(userId, CardId);
        //
        // // Optional: Show a notification or update UI
    }
}