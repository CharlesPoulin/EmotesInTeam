@using EmotesForTeam.Model
@using EmotesForTeam.Services
@using Microsoft.AspNetCore.Components

@inherits ComponentBase

@if (cards != null && cards.Any())
{
    <div class="grid sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-x-100 gap-y-4">
        @foreach (var card in cards)
        {
            <div class="w-[202px] h-[259px] relative bg-white rounded-[6.7px] shadow-xl">
                <div class="w-[77px] h-7 left-[110px] top-[207px] absolute bg-blue-600 rounded-[6.7px]"></div>
                <div class="w-[77px] h-7 left-[16px] top-[207px] absolute">
                    <div class="w-[77px] h-3 left-0 top-0 absolute bg-indigo-400 rounded-[13.4px]"></div>
                    <div class="w-[77px] h-3 left-0 top-[16px] absolute bg-indigo-900 rounded-[13.4px]"></div>
                </div>
                <div class="w-6 h-6 right-5 top-[24px] absolute justify-center items-center inline-flex bg-blue-600">
                    <div class="w-6 h-6 relative"></div>
                </div>


                <div class="absolute top-[172px] w-full flex justify-center">
                    <p class="text-blue-600 font-medium">@card.Title</p>
                </div>

                <div class="w-[77px] h-7 left-[16px] top-[16px] absolute">
                    <div class="w-[77px] h-3 left-0 top-0 absolute bg-indigo-400 rounded-[13.4px]"></div>
                    <div class="w-[77px] h-3 left-0 top-[16px] absolute bg-indigo-900 rounded-[13.4px]"></div>
                </div>
                <div class="w-[200px] h-[200px] absolute justify-center items-center inline-flex">
                    <img src="@card.ImageUrl" alt="@card.Title" class="mx-auto max-w-full h-auto" />
                </div>

            </div>



@*             <div class="p-4 text-center text-white max-w-xs bg-gray-800 rounded-lg shadow-2xl">
                <img src="@card.ImageUrl" alt="@card.Title" class="mx-auto max-w-full h-auto" />
                <p class="mt-2">@card.Title</p>
            </div> *@
        }
    </div>


}
<div class="flex justify-between mt-4">
    <button @onclick="PreviousPage" class="btn-previous bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow" disabled="@IsFirstPage">Previous</button>
    <button @onclick="NextPage" class="btn-next bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow" disabled="@IsLastPage">Next</button>
</div>
@code {
    [Inject]
    protected CardService? CardService { get; set; }

    private List<Card>? cards;

    private const int PageSize = 30;
    private int CurrentPage { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        await LoadCards();
    }

    private async Task LoadCards()
    {
        if (CardService != null)
        {
            cards = await CardService.GetCardsAsync(CurrentPage, PageSize);
        }
    }

    private async Task NextPage()
    {
        CurrentPage++;
        await LoadCards();
    }

    private async Task PreviousPage()
    {
        if (CurrentPage > 1)
        {
            CurrentPage--;
            await LoadCards();
        }
    }

    private bool IsFirstPage => CurrentPage <= 1;
    private bool IsLastPage => cards != null && cards.Count < PageSize;
}
