@page "/login"
@inject NavigationManager NavManager
@using EmotesForTeam.Pages.Service
@inject AuthenticationService AuthService


<div class="flex items-center justify-center h-screen bg-gray-100">
    <div class="w-full max-w-xs">
        <form @onsubmit="SubmitForm" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="username">
                    Username
                </label>
                <input @bind="username" id="username" type="text" placeholder="Username" 
                       class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
            </div>
            <div class="mb-6">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="password">
                    Password
                </label>
                <input @bind="password" id="password" type="password" placeholder="******************" 
                       class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline">
            </div>
            <div class="flex items-center justify-between">
                <button class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
                    Login
                </button>
            </div>
        </form>
        @if (loginResult != null)
        {
            <div class="text-center py-4">
                <p class="text-sm @(loginResultCssClass)">
                    @loginResult
                </p>
            </div>
        }
    </div>
</div>

@code {
    private string username;
    private string password;
    private string loginResult;
    private string loginResultCssClass;

    private async Task SubmitForm()
    {
        // Your existing login logic
        var result = await AuthService.Login(username, password);
        if (result)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            //todo connect endpoint to Display an error message
            Console.WriteLine("Error");
        }
    }
}
